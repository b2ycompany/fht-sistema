rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========================================================
    // üîπ 1. Regras da cole√ß√£o "users"
    // ========================================================
    match /users/{userId} {
      // Usu√°rio autenticado pode ler e editar o pr√≥prio perfil.
      allow get, update: if request.auth != null && request.auth.uid == userId;
      
      // Admin e Hospital podem listar e ler todos os perfis.
      allow list, get: if request.auth != null && request.auth.token.role in ['admin', 'hospital'];
      
      // Admin pode criar novos usu√°rios.
      allow create: if request.auth != null && request.auth.token.role == 'admin';
    }

    // ========================================================
    // üîπ 2. Regras da cole√ß√£o "specialties" (NOVA REGRA)
    // ========================================================
    match /specialties/{specialtyId} {
        // Permite que qualquer usu√°rio autenticado leia a lista de especialidades.
        allow read: if request.auth != null;
    }

    // ========================================================
    // üîπ 3. Regras da cole√ß√£o "hospitals"
    // ========================================================
    match /hospitals/{hospitalId} {
      // Admin e Hospital t√™m acesso completo.
      allow read, write: if request.auth != null && request.auth.token.role in ['admin', 'hospital'];
    }

    // ========================================================
    // üîπ 4. Regras da cole√ß√£o "caravanas"
    // ========================================================
    match /caravanas/{caravanaId} {
      // Admin e Caravan Admin podem ler e editar caravanas.
      allow read, write: if request.auth != null && request.auth.token.role in ['admin', 'caravan_admin'];
    }

    // ========================================================
    // üîπ 5. Regras da cole√ß√£o "appointments" (exemplo)
    // ========================================================
    match /appointments/{appointmentId} {
      // M√©dicos, recepcionistas, enfermeiros de triagem e hospitais podem ler ou criar.
      allow read, create, update: if request.auth != null && 
        request.auth.token.role in ['admin', 'hospital', 'doctor', 'receptionist', 'triage_nurse'];
      
      // Admin tem acesso total.
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // ========================================================
    // üîπ 6. Regras da cole√ß√£o "metrics" ou "reports"
    // ========================================================
    match /metrics/{metricId} {
      // A permiss√£o 'aggregate' foi removida por n√£o ser v√°lida em regras de seguran√ßa.
      allow read, write: if request.auth != null && request.auth.token.role in ['admin', 'hospital'];
    }

    // ========================================================
    // üîπ 7. Regras da cole√ß√£o "settings" (configura√ß√µes gerais)
    // ========================================================
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // ========================================================
    // üîπ 8. Regras gen√©ricas (fallback)
    // ========================================================
    match /{document=**} {
      // Apenas usu√°rios autenticados com role reconhecida.
      // A permiss√£o 'aggregate' foi removida por n√£o ser v√°lida.
      allow read, write: if request.auth != null && 
        request.auth.token.role in [
          'admin',
          'hospital',
          'doctor',
          'receptionist',
          'triage_nurse',
          'caravan_admin'
        ];
    }
  }
}