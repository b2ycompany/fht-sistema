rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Regra para a coleção "specialties"
    match /specialties/{specialtyId} {
      allow read: if true;
    }

    // Regras da coleção "users"
    match /users/{userId} {
      allow get, update: if request.auth != null && request.auth.uid == userId;
      allow list, get: if request.auth != null && request.auth.token.role in ['admin', 'hospital'];
      allow create: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Regras da coleção "hospitals"
    match /hospitals/{hospitalId} {
      allow read, write: if request.auth != null && request.auth.token.role in ['admin', 'hospital'];
    }

    // Regras da coleção "caravanas"
    match /caravanas/{caravanaId} {
      allow read, write: if request.auth != null && request.auth.token.role in ['admin', 'caravan_admin'];
    }

    // Regras da coleção "appointments"
    match /appointments/{appointmentId} {
      allow read, create, update: if request.auth != null && 
        request.auth.token.role in ['admin', 'hospital', 'doctor', 'receptionist', 'triage_nurse'];
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Regras da coleção "metrics" ou "reports"
    match /metrics/{metricId} {
      allow read, write: if request.auth != null && request.auth.token.role in ['admin', 'hospital'];
    }

    // Regras da coleção "settings"
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Regra genérica (fallback)
    match /{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.role in [
          'admin',
          'hospital',
          'doctor',
          'receptionist',
          'triage_nurse',
          'caravan_admin'
        ];
    }
  }
}