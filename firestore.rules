[cite_start]rules_version = '2'; [cite: 1]

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funções Auxiliares (sem alterações) ---
    [cite_start]function isSignedIn() { return request.auth != null; [cite: 2] }
    [cite_start]function hasRole(role) { return isSignedIn() && request.auth.token.role == role; [cite: 3] }
    [cite_start]function isOwner(userId) { return isSignedIn() && request.auth.uid == userId; [cite: 4] }
    [cite_start]function isUnitManager(unitId) { return hasRole('hospital') && request.auth.uid == unitId; [cite: 5] }
    function isStaffMember(unitId) {
      [cite_start]return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.hospitalId == unitId; [cite: 6]
    }

    // --- REGRAS PARA UTILIZADORES (sem alterações) ---
    match /users/{userId} {
      [cite_start]allow read: if hasRole('admin') || isOwner(userId) || isUnitManager(resource.data.hospitalId); [cite: 7]
      [cite_start]allow create: if isOwner(userId) || hasRole('admin'); [cite: 8]
      [cite_start]allow update: if isOwner(userId) || hasRole('admin'); [cite: 8]
      [cite_start]allow delete: if hasRole('admin'); [cite: 8]
    }
    
    // --- REGRAS PARA O FLUXO DE ATENDIMENTO (sem alterações) ---
    match /patients/{patientId} {
      [cite_start]allow read, write: if hasRole('admin') || isStaffMember(resource.data.unitId) || isUnitManager(resource.data.unitId); [cite: 9]
      allow delete: if hasRole('admin');
    }
    match /serviceQueue/{queueId} {
      [cite_start]allow read, write: if hasRole('admin') || isUnitManager(resource.data.unitId) || isStaffMember(resource.data.unitId); [cite: 10]
      allow delete: if hasRole('admin');
    }
    match /consultations/{consultationId} {
      [cite_start]allow read, write: if hasRole('admin') || isOwner(resource.data.doctorId) || isUnitManager(resource.data.hospitalId); [cite: 11]
      allow delete: if hasRole('admin');
    }
    
    // --- REGRAS DE NEGÓCIO (COM CORREÇÕES DEFINITIVAS PARA A AGENDA) ---
    [cite_start]match /settings/{settingId} { allow read, write: if hasRole('admin'); [cite: 12] }
    [cite_start]match /specialties/{specialtyId} { allow read: if true; allow write: if hasRole('admin'); [cite: 16] }
    [cite_start]match /invitations/{invitationId} { allow create: if hasRole('admin') || hasRole('hospital'); [cite: 17] [cite_start]allow read, update, delete: if false; [cite: 17] }
    [cite_start]match /caravanEvents/{eventId} { allow read: if isSignedIn(); [cite: 18] [cite_start]allow write: if hasRole('admin'); [cite: 18] }
    [cite_start]match /shiftRequirements/{requirementId} { allow read: if isSignedIn(); [cite: 19] allow create: if hasRole('admin') || (hasRole('hospital') [cite_start]&& request.resource.data.hospitalId == request.auth.uid); [cite: 19] allow update, delete: if hasRole('admin') || (isSignedIn() [cite_start]&& resource.data.hospitalId == request.auth.uid); [cite: 20] }
    match /timeRecords/{recordId} { allow read: if hasRole('admin') || (isSignedIn() [cite_start]&& (resource.data.doctorId == request.auth.uid || resource.data.hospitalId == request.auth.uid)); [cite: 21] allow write: if hasRole('admin') || (isSignedIn() [cite_start]&& request.auth.uid == resource.data.doctorId); [cite: 22] }
    match /potentialMatches/{matchId} { 
      // Regra ajustada para remover delete explícito, já que não é necessário aqui
      allow read, write: if hasRole('admin') || (isSignedIn() [cite_start]&& (resource.data.doctorId == request.auth.uid || resource.data.hospitalId == request.auth.uid)); [cite: 29]
    }

    // ============================================================================
    // CORREÇÃO DEFINITIVA PARA A AGENDA DO MÉDICO
    // ============================================================================
    match /contracts/{contractId} {
      // Um médico ou hospital só pode ler/escrever os seus próprios contratos.
      // A regra 'read' única cobre get e list (consultas de lista).
      allow read, write: if hasRole('admin') || 
                           (isSignedIn() && (resource.data.doctorId == request.auth.uid || resource.data.hospitalId == request.auth.uid));
    }
    
    match /doctorTimeSlots/{timeSlotId} {
      // Um médico só pode gerir os seus próprios horários.
      // A regra 'read' única cobre get e list.
      allow read, write, delete: if hasRole('admin') || 
                                  (isSignedIn() [cite_start]&& resource.data.doctorId == request.auth.uid); [cite: 29]
    }

    match /appointments/{appointmentId} {
      // Um médico só pode gerir os seus próprios agendamentos.
      // A regra 'read' única cobre get e list.
      allow read, write: if hasRole('admin') || 
                          (isSignedIn() && resource.data.doctorId == request.auth.uid);
    }
  }
}